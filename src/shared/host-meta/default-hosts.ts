import { HostMeta } from './types';

export const DEFAULT_HOSTS: HostMeta[] = [
  {
    id: 'disable-apps',
    name: '_disable_apps',
    description: 'Disable certain Apps',
    host: ['*://*.crunchyroll.com/*', '*://music.youtube.com/*'],
    auto: false,
    allFrames: false,
    disabled: true,
  },
  {
    id: 'trigger-parser',
    name: '_trigger_parser_',
    description: 'Trigger Parser',
    host: '<all_urls>',
    auto: false,
    allFrames: false,
    parse: 'body',
  },
  {
    id: 'kochounoyume-cde-parser',
    name: 'CDE Parser',
    description: 'Parses dictionary entries for the JPDB CDE user script',
    host: [
      '*://jpdb.io/vocabulary/*',
      '*://jpdb.io/review*',
      '*://jpdb.io/deck*',
      '*://jpdb.io/search*',
    ],
    auto: true,
    optOut: true,
    allFrames: false,
    parserClass: 'kochounoyume-parser',
    parseVisibleObserver: {
      exclude: '.meaning-subsection-label',
    },
    addedObserver: {
      notifyFor: '.custom-dictionary-entry',
      observeFrom: 'body',
      config: {
        childList: true,
        subtree: true,
      },
    },
  },
  {
    id: 'texthooker-parser',
    name: 'Texthooker Parser',
    description: 'Parse hooked texts (anacreondjt, renji-xd and learnjapanese.moe)',
    host: [
      '*://anacreondjt.gitlab.io/texthooker.html',
      '*://learnjapanese.moe/texthooker.html',
      '*://renji-xd.github.io/texthooker-ui/',
      '*://*/texthooker$',
    ],
    auto: true,
    optOut: true,
    allFrames: false,
    parseVisibleObserver: true,
    parserClass: 'texthooker-parser',
    addedObserver: {
      notifyFor: '.textline, .line_box, .my-2.cursor-pointer, p',
      observeFrom: ['#textlog, main', 'body'],
      config: {
        childList: true,
        subtree: true,
      },
    },
  },
  {
    id: 'exstatic-parser',
    name: 'ExStatic Parser',
    description: 'Enables parsing for ExStatic',
    host: '*://kamwithk.github.io/exSTATic/tracker.html',
    auto: true,
    optOut: true,
    allFrames: false,
    parseVisibleObserver: true,
    custom: 'ExStaticParser',
    addedObserver: {
      notifyFor: '.sentence-entry',
      observeFrom: '#entry_holder',
      config: {
        childList: true,
        subtree: true,
      },
    },
  },
  {
    id: 'readwok-parser',
    name: 'Readwok Parser',
    description: 'Parses Readwok books',
    host: '*://app.readwok.com/*',
    auto: true,
    optOut: true,
    allFrames: false,
    parseVisibleObserver: true,
    custom: 'ReadwokParser',
    addedObserver: {
      notifyFor: 'div[class*="styles_paragraph_"], div[class*="styles_reader_"]',
      observeFrom: 'body',
      config: {
        childList: true,
        subtree: true,
      },
    },
  },
  {
    id: 'ttsu-parser',
    name: 'Ttsu Parser',
    description: 'Parses Ttsu books',
    host: '*://reader.ttsu.app/*',
    auto: true,
    optOut: true,
    allFrames: false,
    custom: 'TtsuParser',
    parseVisibleObserver: true,
    addedObserver: {
      notifyFor: 'div.book-content',
      observeFrom: 'body',
      config: {
        childList: true,
        subtree: true,
      },
    },
  },
  {
    id: 'youtube-comments-parser',
    name: 'YouTube Comments Parser',
    description: 'Parses YouTube comments',
    host: ['*://*.youtube.com/*', '*://*.youtu.be/*'],
    auto: true,
    optOut: true,
    allFrames: false,
    parseVisibleObserver: true,
    parserClass: 'youtube-parser',
    addedObserver: {
      notifyFor: 'ytd-comment-view-model',
      observeFrom: 'body',
      config: {
        childList: true,
        subtree: true,
      },
    },
  },
  {
    id: 'mokuro-parser',
    name: 'Mokuro Parser',
    description: 'Parses manga on Mokuro',
    host: '*://reader.mokuro.app/*',
    auto: true,
    optOut: true,
    allFrames: true,
    custom: 'MokuroParser',
    parseVisibleObserver: true,
    addedObserver: {
      notifyFor: '#manga-panel',
      observeFrom: 'body',
      config: {
        childList: true,
        subtree: true,
      },
    },
  },
  {
    id: 'mokuro-legacy-parser',
    name: 'Mokuro Legacy Parser',
    description: 'Parses manga on Mokuro (legacy)',
    host: 'file:///*mokuro*.html',
    auto: true,
    optOut: true,
    allFrames: true,
    custom: 'MokuroLegacyParser',
    parseVisibleObserver: true,
  },
  {
    id: 'wikipedia-parser',
    name: 'Wikipedia Parser',
    description: 'Parses Japanese Wikipedia',
    host: ['*://ja.wikipedia.org/*', '*://ja.m.wikipedia.org/*'],
    auto: true,
    optOut: true,
    allFrames: false,
    parserClass: 'wikipedia-parser',
    parseVisibleObserver: {
      exclude:
        '.p-lang-btn, .vector-menu-heading-label, .vector-toc-toggle, .vector-page-toolbar, .mw-editsection, sup.reference',
    },
    addedObserver: {
      notifyFor: '#firstHeading, #mw-content-text .mw-parser-output > *, .mwe-popups-extract > *',
      observeFrom: 'body',
      config: {
        childList: true,
        subtree: true,
      },
    },
  },
  {
    id: 'asbplayer-parser',
    name: 'asbplayer Parser',
    description: 'Parses asbplayer subtitles',
    host: '<all_urls>',
    auto: true,
    optOut: true,
    allFrames: true,
    css: '.asbplayer-subtitles-container-bottom { z-index: 2147483646 }',
    parserClass: 'asb-player-parser',
    addedObserver: {
      notifyFor: '.asbplayer-offscreen',
      observeFrom: 'body',
      config: {
        childList: true,
        subtree: true,
      },
    },
  },
];
