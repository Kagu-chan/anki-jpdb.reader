@use 'sass:map';
@use '_helpers' as helpers;

.popup {
  @include helpers.font-sizes;
  @include helpers.scale;

  @include helpers.outline-colors;
  @include helpers.word-colors;
  @include helpers.deck-colors;
  @include helpers.grade-colors;

  @include helpers.pitch;
  @include helpers.popup;

  @include helpers.rt;
  @include helpers.common;
  @include helpers.distances;
}

.popup {
  scale: var(--jpdb-scale-normal);

  font-size: var(--jpdb-font-size);

  width: var(--jpdb-popup-width);
  max-height: var(--jpdb-popup-height);
  box-shadow: 5px 5px 15px 0px rgba(0, 0, 0, 0.5);

  padding: var(--jpdb-padding);
  border-radius: var(--jpdb-border-radius);

  color: var(--jpdb-text-color);
  background-color: var(--jpdb-background-color);
}

.popup {
  @include helpers.flex-column;
}

.popup .controls {
  @include helpers.flex-row;

  a {
    line-height: var(--jpdb-font-size-small);
    font-size: var(--jpdb-font-size-small);
    height: var(--jpdb-font-size-large);
    padding: var(--jpdb-padding) var(--jpdb-padding) 0 var(--jpdb-padding);

    &:hover {
      filter: brightness(1.2);
    }

    &:active {
      filter: brightness(0.8);
    }
  }
}

.popup .controls {
  @each $deck in helpers.$deck-colors {
    .#{$deck} {
      color: var(--jpdb-deck-#{$deck}, var(--jpdb-deck-default-color));
      border-color: var(--jpdb-deck-#{$deck}, var(--jpdb-deck-default-color));
      box-shadow: inset 0 0 3px var(--jpdb-deck-#{$deck}, var(--jpdb-deck-default-color));
    }
  }
}

.popup .controls {
  @each $grade in helpers.$grade-colors {
    .#{$grade} {
      color: var(--jpdb-grade-#{$grade}, var(--jpdb-grade-default-color));
      border-color: var(--jpdb-grade-#{$grade}, var(--jpdb-grade-default-color));
      box-shadow: inset 0 0 3px var(--jpdb-grade-#{$grade}, var(--jpdb-grade-default-color));
    }
  }
}

.popup #context {
  @include helpers.flex-column;

  .subsection {
    @include helpers.flex-row;
    justify-content: space-between;
  }
}

.popup #link {
  font-size: var(--jpdb-font-size-x-large);
  border-bottom: 1px dashed var(--jpdb-link-underline-color);

  &:hover {
    border-bottom-style: solid;
  }

  rt {
    @include helpers.rt-styles;
  }
}

.popup #state {
  @include helpers.flex-row;
  align-items: flex-end;

  span {
    font-size: var(--jpdb-font-size-small);
    line-height: var(--jpdb-font-size-small);
    text-decoration: underline;

    padding-left: var(--jpdb-padding);
    padding-bottom: var(--jpdb-padding);

    @each $word in helpers.$word-colors {
      &.#{$word} {
        color: var(--jpdb-word-#{$word}, var(--jpdb-word-default-color));
      }
    }
  }
}

.popup #meta {
  font-size: var(--jpdb-font-size-small);
  white-space: nowrap;

  #pitch-accent {
    @include helpers.flex-row;
    gap: 0.5em;

    .pitch span {
      padding: 1px 1px 1px 2px;
      line-height: var(--jpdb-font-size);

      border-style: solid;
      border-image-slice: 2;
      border-image-source: linear-gradient(
        to bottom,
        var(--jpdb-pitch-upper),
        var(--jpdb-pitch-lower)
      );
    }

    .pitch .low {
      border-width: 0 2px 2px 0;
      margin-right: -2px;
    }

    .pitch .high {
      border-width: 2px 2px 0 0;
      margin-right: -2px;
    }

    .pitch .low-final {
      border-width: 0 0 2px 0;
    }

    .pitch .high-final {
      border-width: 2px 0 0 0;
    }
  }
}

.popup #details {
  margin-top: var(--jpdb-margin);
  overflow: auto;

  .pos {
    @include helpers.flex-row;

    span {
      font-size: var(--jpdb-font-size-small);
      line-height: var(--jpdb-font-size-small);
      text-decoration: underline;

      padding: var(--jpdb-padding) 0;
    }
  }

  ol {
    margin: 0;
    padding: 0 0 0 calc(var(--jpdb-padding) * 3);
  }
}
