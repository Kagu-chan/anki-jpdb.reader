@use '../variables/_colors' as colors;

$outline-input-shadow-color: #4b8dff;
$outline-input-color: #4b8dff;
$outline-input-background-color: #171717;

input, a, label {
  &.outline {
    background-color: $outline-input-background-color;
    border: 1px solid map-get(colors.$buttons, button-focused-border-color);
    border-radius: .7em;

    color: $outline-input-color;
    cursor: pointer;

    box-shadow: none;
    transform: none;

    &:hover {
      transform: none;
      box-shadow: inset 0 0 3px $outline-input-shadow-color;
    }

    &:focus {
      box-shadow: none;
      text-decoration: underline;
      text-decoration-color: $outline-input-shadow-color;
      text-underline-offset: 0.4em;
    }

    &[disabled]:hover {
      background-color: $outline-input-background-color;
      border: 1px solid $outline-input-color;
      box-shadow: none;
    }
  }
}

a, label {
  &.outline {
    border: 1px solid map-get(colors.$buttons, button-background-color);
    padding: 0.6em 2.25em;
    text-align: center;
    transition: all ease-in-out 0.2s;

    &:focus {
      border: 1px solid map-get(colors.$buttons, button-focused-border-color);
      box-shadow: 0 1px 1px map-get(colors.$buttons, button-shadow-color), 0 2px 8px map-get(colors.$buttons, button-focused-shadow-color);
    }
  }
}

label {
  &.outline {
    cursor: pointer;
    display: inline-block;
    margin-bottom: 1.5em;

    &[disabled] {
      cursor: default;
      opacity: 0.5;
      pointer-events: none;
    }
  }
}

.outline {
  @each $id, $color in colors.$outlines {
    &.#{$id} {
      color: $color;
      border-color: $color;

      &:hover {
        border: 1px solid $color;
        box-shadow: inset 0 0 3px $color;
      }

      &[disabled]:hover {
        box-shadow: none;
      }

      &:focus {
        text-decoration-color: $color;
      }
    }
  }
}
